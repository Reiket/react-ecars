{"version":3,"file":"static/js/108.d7153295.chunk.js","mappings":"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","sources":["components/Pages/components/Favorites/components/NotFoundFav/NotFoundFav.tsx","components/Pages/components/Favorites/Favorites.tsx","components/Pages/components/Favorites/store/selector/favorites-selector.ts","shared/components/Card/Card.tsx","shared/hooks/useFavorites.ts","components/Pages/components/Favorites/store/thunks/fetchRemoveFromFav.ts","components/Pages/components/Favorites/store/thunks/fetchAddToFav.ts","shared/components/FavButton/FavButton.tsx","shared/components/Title/Text.tsx","shared/hooks/usePrice.ts"],"sourcesContent":["import React from 'react';\r\nimport Title from \"../../../../../../shared/components/Title/Title\";\r\nimport {Link, useLocation} from \"react-router-dom\";\r\n\r\nconst NotFoundFav: React.FC = () => {\r\n    const location = useLocation();\r\n    console.log(location)\r\n    console.log(document.referrer)\r\n    return <div className=\"not-found-fav\">\r\n        <div className=\"not-found-fav__body\">\r\n            <Title text={\"You don't have favorite trips!\"} classnames={\"not-found-fav__title\"}/>\r\n            <p className=\"not-found-fav__text\">Please press the <span>\"Back\"</span> button and add a car to favorites.\r\n            </p>\r\n            <Link to={\"/\"} className={\"not-found-fav__btn green-button_big green-button\"}>Back</Link>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default NotFoundFav;","import React from 'react';\r\nimport NotFoundFav from \"./components/NotFoundFav/NotFoundFav\";\r\nimport {selectFavorites, selectIsLoading} from \"./store/selector/favorites-selector\";\r\nimport {selectFilters} from \"../Home/components/Offers/store/selector/offers-selector\";\r\nimport Title from \"../../../../shared/components/Title/Title\";\r\nimport Card from \"../../../../shared/components/Card/Card\";\r\nimport {useAppSelector} from \"../../../../app/store/hooks\";\r\nimport {Icons} from \"../../../../shared/components/Icons/Icons\";\r\n\r\nconst Favorites: React.FC = () => {\r\n    const favItems = useAppSelector(selectFavorites)\r\n    const isLoading = useAppSelector(selectIsLoading)\r\n    const {currency} = useAppSelector(selectFilters)\r\n    const renderFavoritesContent = () => {\r\n        if (favItems.length > 0) {\r\n            return <div className=\"favorites__body\">\r\n                {favItems.map((item, id) => (\r\n                    <Card classnames={\"favorites__item item-favorites\"} key={id} item={item} currency={currency}/>\r\n                ))}\r\n            </div>\r\n        }\r\n        return <NotFoundFav/>\r\n    };\r\n    return isLoading ? <Icons.loader/>  : <section className=\"section__favorites favorites\">\r\n        <div className=\"favorites__container\">\r\n            {favItems.length > 0 && <Title text={\"Favorites\"}/>}\r\n            {renderFavoritesContent()}\r\n        </div>\r\n    </section>\r\n\r\n}\r\n\r\n\r\nexport default Favorites;","import {AppStateType} from \"../../../../../../app/store/types/store.types\";\r\n\r\nexport const selectFavorites = (state: AppStateType) => {\r\n    return state.favorites.items;\r\n}\r\n\r\nexport const selectIsLoading = (state: AppStateType) => {\r\n    return state.favorites.isLoading;\r\n}","import React from 'react';\r\nimport {MdOutlineKeyboardArrowRight} from \"react-icons/md\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {CardPropsType} from \"./types/card.types\";\r\nimport Text from \"../Title/Text\";\r\nimport ItemTitle from \"../Title/ItemTitle\";\r\nimport FavButton from \"../FavButton/FavButton\";\r\nimport {usePrice} from \"../../hooks/usePrice\";\r\nimport {useAppSelector} from \"../../../app/store/hooks\";\r\nimport {\r\n    selectFilters\r\n} from \"../../../components/Pages/components/Home/components/Offers/store/selector/offers-selector\";\r\n\r\nconst Card: React.FC<CardPropsType> = React.memo(({item, currency, classnames}) => {\r\n    const [price, discountedPrice] = usePrice(item, currency)\r\n    const filters = useAppSelector(selectFilters);\r\n    return <div className={classnames}>\r\n        <div className=\"card__image\">\r\n            <FavButton item={item} classnames={\"card__favorite\"}/>\r\n            <img src={item.imageUrl} alt=\"CarImage\" />\r\n        </div>\r\n        <div className=\"card__info\">\r\n            <Text text={item.name} classnames={\"card__name\"}/>\r\n            <p className=\"card__description\">{item.description}</p>\r\n            <div className=\"card__bottom\">\r\n                <ItemTitle text={discountedPrice} size={\"small\"}/>\r\n                <p className=\"card__discount\">{price}</p>\r\n                <Link to={`/${item.id}?ship=${filters.shipNumber}&currency=${filters.currency}`} className=\"card__details\">Details <MdOutlineKeyboardArrowRight /></Link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n})\r\n\r\nexport default Card;","import {selectFavorites} from \"../../components/Pages/components/Favorites/store/selector/favorites-selector\";\r\nimport {ItemsType} from \"../types/types\";\r\nimport {checkInFavorites} from \"../utils\";\r\nimport {fetchRemoveFromFav} from \"../../components/Pages/components/Favorites/store/thunks/fetchRemoveFromFav\";\r\nimport {fetchAddToFav} from \"../../components/Pages/components/Favorites/store/thunks/fetchAddToFav\";\r\nimport {useAppDispatch, useAppSelector} from \"../../app/store/hooks\";\r\n\r\nexport const useFavorites = () => {\r\n    const dispatch = useAppDispatch()\r\n    const favorites = useAppSelector(selectFavorites)\r\n    const onClickToFavorite = (item: ItemsType) => {\r\n        if (checkInFavorites(item.id, favorites)) {\r\n            dispatch(fetchRemoveFromFav(item.id))\r\n        } else {\r\n            dispatch(fetchAddToFav(item))\r\n        }\r\n    };\r\n    return {onClickToFavorite}\r\n}","import {favoritesAPI} from \"../../api/favorites-api\";\r\nimport {ThunkType} from \"../types/favorites-reducer.types\";\r\nimport {actions} from \"../actions/favorites-actions\";\r\n\r\nexport const fetchRemoveFromFav = (id: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(actions.toggleIsLoading(true))\r\n            await favoritesAPI.removeToFavorites(id);\r\n            dispatch(actions.toggleIsLoading(false))\r\n            dispatch(actions.removeFromFavorites(id));\r\n        } catch (error) {\r\n            console.log(\"Error:\" + error);\r\n            alert(\"Something went wrong with remove from favorites! Please, try again!\")\r\n        }\r\n    };\r\n};","import {ItemsType} from \"../../../../../../shared/types/types\";\r\nimport {favoritesAPI} from \"../../api/favorites-api\";\r\nimport {ThunkType} from \"../types/favorites-reducer.types\";\r\nimport {actions} from \"../actions/favorites-actions\";\r\n\r\nexport const fetchAddToFav = (item: ItemsType): ThunkType => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(actions.toggleIsLoading(true))\r\n            let {data}= await favoritesAPI.addToFavorites(item);\r\n            dispatch(actions.toggleIsLoading(false))\r\n            dispatch(actions.addToFavorites(data));\r\n        } catch (error) {\r\n            console.log(\"Error:\" + error);\r\n            alert(\"Something went wrong with add to favorites! Please, try again!\")\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport {checkInFavorites} from \"../../utils\";\r\nimport {AiFillHeart, AiOutlineHeart} from \"react-icons/ai\";\r\nimport {\r\n    selectFavorites,\r\n    selectIsLoading\r\n} from \"../../../components/Pages/components/Favorites/store/selector/favorites-selector\";\r\nimport {useFavorites} from \"../../hooks/useFavorites\";\r\nimport {TFavButton} from \"./types/fav.btn.types\";\r\nimport {useAppSelector} from \"../../../app/store/hooks\";\r\n\r\nconst FavButton: React.FC<TFavButton> = ({text,item, classnames}) => {\r\n    const isLoading = useAppSelector(selectIsLoading)\r\n    const favorites = useAppSelector(selectFavorites)\r\n    const {onClickToFavorite} = useFavorites();\r\n    return <button disabled={isLoading}\r\n                   onClick={() => onClickToFavorite(item)}\r\n                   className={classnames}>\r\n        {checkInFavorites(item.id, favorites) ? <AiFillHeart /> : <AiOutlineHeart />}\r\n        {text}\r\n    </button>\r\n};\r\n\r\nexport default FavButton;","import React from 'react';\r\nimport {TitlePropsType} from \"./types/title.types\";\r\nimport {cn} from \"../../utils\";\r\n\r\nconst Text: React.FC<TitlePropsType> = ({text, classnames}) => {\r\n    return  <p className={cn(\"text\", classnames)}>{text}</p>\r\n}\r\n\r\n\r\nexport default Text;","import {discountPrice, formatPrice} from \"../utils\";\r\nimport {ItemsType} from \"../types/types\";\r\n\r\nexport const usePrice = (item: ItemsType, currency: number) => {\r\n    const currencyKey = Object.keys(item.price)[currency] as \"USD\" | \"EUR\" | \"GBP\";\r\n    const currencyPrice = Object.values(item.price)[currency];\r\n\r\n    const price = formatCurrency(currencyPrice, currencyKey);\r\n    const discountedPrice = calculateDiscountPrice(currencyPrice, item.discountPercent, currencyKey);\r\n\r\n    return [price, discountedPrice];\r\n}\r\n\r\nconst formatCurrency = (price: number, currency: \"USD\" | \"EUR\" | \"GBP\") => {\r\n    return formatPrice(price, { currency });\r\n}\r\n\r\nconst calculateDiscountPrice = (price: number, discountPercent: number, currency: \"USD\" | \"EUR\" | \"GBP\") => {\r\n    const discountedPrice = discountPrice(price, discountPercent);\r\n    return formatPrice(discountedPrice, { currency });\r\n}"],"names":["NotFoundFav","location","useLocation","console","log","document","referrer","_jsx","className","children","_jsxs","Title","text","classnames","Link","to","Favorites","favItems","useAppSelector","selectFavorites","isLoading","selectIsLoading","currency","selectFilters","Icons","loader","length","map","item","id","Card","state","favorites","items","React","_ref","price","discountedPrice","usePrice","filters","FavButton","src","imageUrl","alt","Text","name","description","ItemTitle","size","concat","shipNumber","MdOutlineKeyboardArrowRight","useFavorites","dispatch","useAppDispatch","onClickToFavorite","checkInFavorites","async","actions","toggleIsLoading","favoritesAPI","removeToFavorites","removeFromFavorites","error","alert","data","addToFavorites","fetchAddToFav","disabled","onClick","AiFillHeart","AiOutlineHeart","cn","currencyKey","Object","keys","currencyPrice","values","formatCurrency","calculateDiscountPrice","discountPercent","formatPrice","discountPrice"],"sourceRoot":""}